<Project>
  <!-- Common Version Management -->
  <PropertyGroup>
    <!--
    🚀 CI/CD Trigger: Directory.Build.props가 변경될 때만 워크플로우 실행됩니다.
    📦 버전 업데이트: 아래 Version을 변경하고 main 브랜치에 push하면 자동으로 NuGet에 배포됩니다.
    🔄 워크플로우: .github/workflows/build-and-release.yml 참조
    -->
    <Version>0.2.8</Version>
    <AssemblyVersion>0.2.8.0</AssemblyVersion>
    <FileVersion>0.2.8.0</FileVersion>
    
    <!-- Package Metadata -->
    <Authors>iyulab</Authors>
    <Company>iyulab</Company>
    <Product>FluxIndex</Product>
    <Copyright>Copyright © 2025 FluxIndex</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/iyulab/FluxIndex</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/iyulab/FluxIndex</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageTags>RAG;VectorStore;Search;AI;Embeddings;Retrieval</PackageTags>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    
    <!-- Build Configuration -->
    <TargetFramework>net9.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>

    <!-- NuGet Package Settings -->
    <PackageOutputPath>$(MSBuildThisFileDirectory)nupkgs</PackageOutputPath>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>

    <!-- Suppress NuGet warnings for package management -->
    <NoWarn>$(NoWarn);NU1506;NU1507;NU1605;NU1107</NoWarn>
    <!-- Suppress XML documentation warnings -->
    <NoWarn>$(NoWarn);CS1591;CS1587</NoWarn>
    <!-- Suppress nullable reference warnings for simplified development -->
    <NoWarn>$(NoWarn);CS8601;CS8604;CS8618;CS8600</NoWarn>
    <!-- Suppress async method warnings for methods that don't need await -->
    <NoWarn>$(NoWarn);CS1998</NoWarn>
    <!-- Suppress unreachable code warnings for commented code sections -->
    <NoWarn>$(NoWarn);CS0162</NoWarn>
    
    <!-- Strong Naming (Optional) -->
    <!--<SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\fluxindex.snk</AssemblyOriginatorKeyFile>-->
  </PropertyGroup>

  <!-- Common Package References -->
  <ItemGroup>
    <!-- <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" /> -->
  </ItemGroup>

  <!-- Package Icon -->
  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)assets\icon.png" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)assets\icon.png')" />
  </ItemGroup>

  <!-- Exclude samples and tests from packaging -->
  <!-- Use more robust path checking with MSBuildProjectDirectory -->
  <PropertyGroup Condition="$(MSBuildProjectDirectory.Contains('\samples\')) OR $(MSBuildProjectDirectory.Contains('/samples/'))">
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Exclude any project with Test in name or in tests folder -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Test')) OR $(MSBuildProjectDirectory.Contains('\tests\')) OR $(MSBuildProjectDirectory.Contains('/tests/'))">
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Only src projects are packable -->
  <PropertyGroup Condition="!$(MSBuildProjectDirectory.Contains('\src\')) AND !$(MSBuildProjectDirectory.Contains('/src/'))">
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <!-- Source projects specific settings -->
  <PropertyGroup Condition="$(MSBuildProjectDirectory.Contains('\src\')) OR $(MSBuildProjectDirectory.Contains('/src/'))">
    <!-- All src projects are packable by default -->
    <IsPackable>true</IsPackable>
    <!-- Enable documentation generation for library projects -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Library-specific build settings -->
    <WarningLevel>5</WarningLevel>
    <!-- Package metadata for all src projects -->
    <PackageDescription>$(Description)</PackageDescription>
  </PropertyGroup>

  <!-- Include README.md in packages if it exists (for src projects only) -->
  <ItemGroup Condition="($(MSBuildProjectDirectory.Contains('\src\')) OR $(MSBuildProjectDirectory.Contains('/src/'))) AND Exists('$(MSBuildThisFileDirectory)README.md')">
    <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Set PackageReadmeFile for src projects if README exists -->
  <PropertyGroup Condition="($(MSBuildProjectDirectory.Contains('\src\')) OR $(MSBuildProjectDirectory.Contains('/src/'))) AND Exists('$(MSBuildThisFileDirectory)README.md')">
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- Common source project dependencies (for src projects only) -->
  <ItemGroup Condition="$(MSBuildProjectDirectory.Contains('\src\')) OR $(MSBuildProjectDirectory.Contains('/src/'))">
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" />
  </ItemGroup>
</Project>